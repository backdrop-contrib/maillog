<?php
// $Id$

/**
 * @file
 * Provides a 'maillog' node type
 *
 * @todo: better implementation of detail link
 *
 *
 *
 *
 */

/**
 * Implementation of hook_menu().
 */
function maillog_delete_maillog_entry( $maillog ) {
	$maillog_id = $maillog['maillog_id'];
  $result = db_query("DELETE FROM {maillog} WHERE `maillog_id` = '%d'", $maillog_id);
  if ($result == FALSE) {
    drupal_set_message(t('A Problem occured when deleting Mail with maillog_id !maillog_id !', array('!maillog_id' => $maillog_id)));
  }
  else {
    drupal_set_message(t('Mail with maillog_id !maillog_id has been deleted!', array('!maillog_id' => $maillog_id)));
  }
  drupal_goto('maillog/log');
  return '';
}

/**
 * Implementation of hook_menu().
 */
function maillog_menu() {
  $items = array();

  $items['admin/settings/maillog'] = array(
    'title' => t('Mail Log Settings'),
    'description' => t('Configure the settings of Mail Log module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maillog_admin_settings'),
    'access arguments' => array('administer maillog'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['maillog/delete/%maillog_id'] = array(
    'title' => t("Delete Mail Log from 'maillog' Table"),
    'description' => t("Delete the Mail Log with the maillog_id given by the parameter from 'maillog' Table"),
    'page callback' => 'maillog_delete_maillog_entry',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'type' => MENU_CALLBACK,
  );
  $items['maillog/details/%maillog_id'] = array(
    'title callback' => 'maillog_title',
    'title arguments' => array(2),
    //'title' => t("Show"),
    'description' => t("Delete the Mail Log with the maillog_id given by the parameter from 'maillog' Table"),
    'page callback' => 'maillog_page',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'type' => MENU_CALLBACK,
  );
 
  return $items;
}

function maillog_title($maillog) {
  return $maillog['subject'];
}
function maillog_id_load($maillog_id) {
  // load from SQL
  //
  $result = db_query("SELECT maillog_id, header_from, header_to, header_reply_to, header_all, subject, body FROM {maillog} WHERE maillog_id = '%d'", $maillog_id );
  if ($result == FALSE) {
    $maillog = NULL;
  }
  else{
     $maillog = db_fetch_array($result);
  }
  return $maillog;
}

function maillog_page($maillog) {
  // load maillog
  return theme('maillog', $maillog);
}

/**
 * Implementation of the module settings form.
 */
function maillog_admin_settings() {
  $form = array();

  $form['maillog_send'] = array(
    '#type' => 'checkbox',
    '#title' => t("Allow the e-mails to be sent."),
    '#default_value' => variable_get('maillog_send', TRUE),
  );

  $form['maillog_log'] = array(
    '#type' => 'checkbox',
    '#title' => t("Create table entries in maillog table for each e-mail."),
    '#default_value' => variable_get('maillog_log', TRUE),
  );

  $form['maillog_devel'] = array(
    '#type' => 'checkbox',
    '#title' => t("Display the e-mails on page using devel module (if enabled)."),
    '#default_value' => variable_get('maillog_devel', TRUE),
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_views_api().
 */
function maillog_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'maillog') . '/includes/',
  );
}

/**
 * Implementation of hook_perm
 */
function maillog_perm() {
  return array('view maillog', 'delete maillog', 'administer maillog');
}

/**
 * Implementation of hook_access().
 */
function maillog_access($op, $node, $account) {
  switch ($op) {
    case 'delete':
      return user_access('delete maillog');
      break;
    case 'view':
      return user_access('view maillog');
      break;
  }
}

/**
 * Implementation of hook_theme().
 */
function maillog_theme() {
  return array(
    'maillog_header_from' => array('arguments' => array('header_from')),
    'maillog_header_to' => array('arguments' => array('header_to')),
    'maillog_header_reply_to' => array('arguments' => array('header_reply_to')),
    'maillog_header_all' => array('arguments' => array('header_all')),
    'maillog_body' => array('arguments' => array('body')),
    'maillog' => array('arguments' => array('maillog')),
  );
}

/**
 * Render the 'From' field in the node type 'Logged Mail'
 */
function theme_maillog_header_from($header_from) {
  $output = '';

  $output .= '<div class="field mail-log-header-from">';
  $output .= '<div class="field-label">' . t('From') . ':</div>';
  $output .= '<div class="field-item">' . $header_from . '</div>';
  $output .= '</div>';

  return $output;
}
function theme_maillog($maillog) {
  $output = theme( 'maillog_header_from', $maillog['header_from'] );
  $output .= theme( 'maillog_header_to', $maillog['header_to'] );
  $output .= theme( 'maillog_header_reply_to', $maillog['header_reply_to'] );
  $output .= theme( 'maillog_header_all', $maillog['header_all'] );
  $output .= theme( 'maillog_body', $maillog['body'] );
  //print_r($maillog);
  return $output;
}


/**
 * Render the 'To' field in the node type 'Logged Mail'
 */
function theme_maillog_header_to($header_to) {
  $output = '';

  $output .= '<div class="field mail-log-header-to">';
  $output .= '<div class="field-label">' . t('To') . ':</div>';
  $output .= '<div class="field-item">' . $header_to . '</div>';
  $output .= '</div>';

  return $output;
}

/**
 * Render the 'Reply-To' field in the node type 'Logged Mail'
 */
function theme_maillog_header_reply_to($header_reply_to) {
  $output = '';

  $output .= '<div class="field mail-log-header-reply-to">';
  $output .= '<div class="field-label">' . t('Reply To') . ':</div>';
  $output .= '<div class="field-item">' . $header_reply_to . '</div>';
  $output .= '</div>';

  return $output;
}

/**
 * Render the 'Header' field in the node type 'Logged Mail'
 */
function theme_maillog_header_all($header_all) {
  $output = '';

  $header_all_data = unserialize($header_all);

  $output .= '<div class="field mail-log-header-all">';
  $output .= '<div class="field-label">' . t('Header') . ':</div>';
  $output .= '<div class="field-item">';

  foreach ($header_all_data as $header_all_name => $header_all_value) {
    $output .= '<div class="mail-log-header-all-subitem">';
    $output .= $header_all_name . ': ' . $header_all_value;
    $output .= '</div>';
  }

  $output .= '</div>';
  $output .= '</div>';

  return $output;
}

/**
 * Render the 'Body' field in the node type 'Logged Mail'
 */
function theme_maillog_body($body) {
  $output = '';

  $output .= '<div class="field mail-log-body">';
  $output .= '<div class="field-label">' . t('Body') . ':</div>';
	$output .= '<div class="field-item">';
	$output .= '<pre>';
	$output .= $body;
	$output .= '</pre>';
  $output .=	'</div>';
  $output .= '</div>';

  return $output;
}
