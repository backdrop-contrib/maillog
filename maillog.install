<?php

/**
 * @file
 * Provides the installation routines for the maillog module
 */

/**
 * Implementation of hook_enable().
 */
function maillog_enable() {
  // The system default class.
  $default_class = 'DefaultMailSystem';

  // Load the current mail configuration.
  $mail_system['default-system'] = config_get('system.mail', 'default-system');
  $mail_system['maillog'] = 'MaillogMailSystem';

  // If maillog is enabled, don't take over the default
  if ($mail_system['default-system'] != $default_class) {
    $mail_system['default-system'] = $mail_system['maillog'];
  }
  else {
    backdrop_set_message(t('The Maillog module was not set as the default email system because another module is already handling email.'));
  }

  // Update the settings.
  config_set('system.mail', 'default-system', $mail_system['default-system']);

  // The maillog reports page is provided by a view, but it needs a menu cache
  // clear after the default views are loaded in order for the menu item to
  // become active.
  global $language;
  cache_clear_all('ctools_plugin_files:ctools:export_ui', 'cache');
  cache_clear_all('ctools_plugin_type_info', 'cache');
  cache_clear_all('views:plugin_data:' . $language->langcode, 'cache');
  state_set('menu_rebuild_needed', TRUE);
}

/**
 * Implementation of hook_disable().
 */
function maillog_disable() {
  // Get the current mail system config.
  $config = config('system.mail');
  $mail_system = $config->get();

  // Delete any overrides that might be set for Maillog.
  unset($mail_system['maillog']);

  // Revert the default config mail config if it is currently set to use
  // Maillog, and any others that are set to Maillog can be just deleted so they
  // revert to the default.
  $default_class = 'DefaultMailSystem';
  $maillog_class = 'MaillogMailSystem';
  foreach ($mail_system as $system => $class) {
    // Look for the default mail handler.
    if ($system == 'default-system') {
      // If this is currently using Maillog, revert it to the default class.
      if ($class == $maillog_class) {
        $mail_system[$system] = $default_class;
      }
    }

    // For all other mail handlers, just delete them if they're set to Maillog
    // so that the system default handler is used instead.
    elseif ($class == $maillog_class) {
      unset($mail_system[$system]);
    }
  }

  // Update the mail config.
  $config->setData($mail_system);
  $config->save();
}

/**
 * Implementation of hook_schema().
 */
function maillog_schema() {
  $schema['maillog'] = array(
    'description' => t("Stores outgoing e-mail details for nodes of type 'maillog'."),
    'fields' => array(
      'idmaillog' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("The mail_log {node}.nid"),
      ),
      'header_message_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => t("The 'message-id' field of the e-mail."),
      ),
      'header_from' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t("The 'From' field of the e-mail."),
      ),
      'header_to' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t("The 'To' field of the e-mail."),
      ),
      'header_reply_to' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t("The 'Reply-To' field of the e-mail."),
      ),
      'header_all' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t("The 'Header' field of the e-mail."),
      ),
      'subject' => array(
        'description' => t("The 'Subject' fieldof the e-mail."),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'body' => array(
        'description' => 'The body of this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'
      ),
      'sent_date' => array(
        'description' => 'The Unix timestamp when the mail was sent.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('idmaillog'),
  );

  return $schema;
}

/**
 * Update webforms from Drupal to Backdrop.
 */
function maillog_update_1000() {
  $config = config('maillog.settings');

  // migrate variables
  $config->set('maillog_send', update_variable_get('maillog_send', TRUE));
  $config->set('maillog_log', update_variable_get('maillog_log', TRUE));
  $config->set('maillog_devel', update_variable_get('maillog_devel', TRUE));
  $config->set('maillog_engine', update_variable_get('maillog_engine', 'DefaultMailSystem'));

  $config->save();

  // Delete variables.
  update_variable_del('maillog_');
  update_variable_del('maillog_');
  update_variable_del('maillog_');
  update_variable_del('maillog_');
}
